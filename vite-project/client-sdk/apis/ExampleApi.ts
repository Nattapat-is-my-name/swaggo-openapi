/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Example API
 * This is a sample server celler server.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface ExamplesAttributeGetRequest {
    enumstring?: ExamplesAttributeGetEnumstringEnum;
    enumint?: ExamplesAttributeGetEnumintEnum;
    enumnumber?: ExamplesAttributeGetEnumnumberEnum;
    string?: string;
    _int?: number;
    _default?: string;
}

export interface ExamplesCalcGetRequest {
    val1: number;
    val2: number;
}

export interface ExamplesGroupsGroupIdAccountsAccountIdGetRequest {
    groupId: number;
    accountId: number;
}

export interface ExamplesHeaderGetRequest {
    authorization: string;
}

export interface ExamplesSecuritiesGetRequest {
    authorization: string;
}

/**
 * 
 */
export class ExampleApi extends runtime.BaseAPI {

    /**
     * attribute
     * attribute example
     */
    async examplesAttributeGetRaw(requestParameters: ExamplesAttributeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        if (requestParameters['enumstring'] != null) {
            queryParameters['enumstring'] = requestParameters['enumstring'];
        }

        if (requestParameters['enumint'] != null) {
            queryParameters['enumint'] = requestParameters['enumint'];
        }

        if (requestParameters['enumnumber'] != null) {
            queryParameters['enumnumber'] = requestParameters['enumnumber'];
        }

        if (requestParameters['string'] != null) {
            queryParameters['string'] = requestParameters['string'];
        }

        if (requestParameters['_int'] != null) {
            queryParameters['int'] = requestParameters['_int'];
        }

        if (requestParameters['_default'] != null) {
            queryParameters['default'] = requestParameters['_default'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/examples/attribute`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * attribute
     * attribute example
     */
    async examplesAttributeGet(requestParameters: ExamplesAttributeGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.examplesAttributeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * plus
     * calc example
     */
    async examplesCalcGetRaw(requestParameters: ExamplesCalcGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {
        if (requestParameters['val1'] == null) {
            throw new runtime.RequiredError(
                'val1',
                'Required parameter "val1" was null or undefined when calling examplesCalcGet().'
            );
        }

        if (requestParameters['val2'] == null) {
            throw new runtime.RequiredError(
                'val2',
                'Required parameter "val2" was null or undefined when calling examplesCalcGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['val1'] != null) {
            queryParameters['val1'] = requestParameters['val1'];
        }

        if (requestParameters['val2'] != null) {
            queryParameters['val2'] = requestParameters['val2'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/examples/calc`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<number>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * plus
     * calc example
     */
    async examplesCalcGet(requestParameters: ExamplesCalcGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {
        const response = await this.examplesCalcGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * path params
     * path params example
     */
    async examplesGroupsGroupIdAccountsAccountIdGetRaw(requestParameters: ExamplesGroupsGroupIdAccountsAccountIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['groupId'] == null) {
            throw new runtime.RequiredError(
                'groupId',
                'Required parameter "groupId" was null or undefined when calling examplesGroupsGroupIdAccountsAccountIdGet().'
            );
        }

        if (requestParameters['accountId'] == null) {
            throw new runtime.RequiredError(
                'accountId',
                'Required parameter "accountId" was null or undefined when calling examplesGroupsGroupIdAccountsAccountIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/examples/groups/{group_id}/accounts/{account_id}`;
        urlPath = urlPath.replace(`{${"group_id"}}`, encodeURIComponent(String(requestParameters['groupId'])));
        urlPath = urlPath.replace(`{${"account_id"}}`, encodeURIComponent(String(requestParameters['accountId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * path params
     * path params example
     */
    async examplesGroupsGroupIdAccountsAccountIdGet(requestParameters: ExamplesGroupsGroupIdAccountsAccountIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.examplesGroupsGroupIdAccountsAccountIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * custome header
     * custome header example
     */
    async examplesHeaderGetRaw(requestParameters: ExamplesHeaderGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['authorization'] == null) {
            throw new runtime.RequiredError(
                'authorization',
                'Required parameter "authorization" was null or undefined when calling examplesHeaderGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['authorization'] != null) {
            headerParameters['Authorization'] = String(requestParameters['authorization']);
        }


        let urlPath = `/examples/header`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * custome header
     * custome header example
     */
    async examplesHeaderGet(requestParameters: ExamplesHeaderGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.examplesHeaderGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * do ping
     * ping example
     */
    async examplesPingGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/examples/ping`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * do ping
     * ping example
     */
    async examplesPingGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.examplesPingGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * custome header
     * custome header example
     */
    async examplesSecuritiesGetRaw(requestParameters: ExamplesSecuritiesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['authorization'] == null) {
            throw new runtime.RequiredError(
                'authorization',
                'Required parameter "authorization" was null or undefined when calling examplesSecuritiesGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['authorization'] != null) {
            headerParameters['Authorization'] = String(requestParameters['authorization']);
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Implicit", ["admin", "write"]);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }


        let urlPath = `/examples/securities`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * custome header
     * custome header example
     */
    async examplesSecuritiesGet(requestParameters: ExamplesSecuritiesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.examplesSecuritiesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ExamplesAttributeGetEnumstringEnum = {
    A: 'A',
    B: 'B',
    C: 'C'
} as const;
export type ExamplesAttributeGetEnumstringEnum = typeof ExamplesAttributeGetEnumstringEnum[keyof typeof ExamplesAttributeGetEnumstringEnum];
/**
 * @export
 */
export const ExamplesAttributeGetEnumintEnum = {
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type ExamplesAttributeGetEnumintEnum = typeof ExamplesAttributeGetEnumintEnum[keyof typeof ExamplesAttributeGetEnumintEnum];
/**
 * @export
 */
export const ExamplesAttributeGetEnumnumberEnum = {
    NUMBER_1_DOT_1: 1.1,
    NUMBER_1_DOT_2: 1.2,
    NUMBER_1_DOT_3: 1.3
} as const;
export type ExamplesAttributeGetEnumnumberEnum = typeof ExamplesAttributeGetEnumnumberEnum[keyof typeof ExamplesAttributeGetEnumnumberEnum];
